-- LocalScript para exibir a posição do jogador em uma UI

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer

-- Cria a ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PositionUI"
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false -- Não reseta a UI quando o jogador morre

-- Cria o Frame principal da UI
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 100)
frame.Position = UDim2.new(0, 10, 0, 10) -- Posição no canto superior esquerdo
frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
frame.BorderSizePixel = 0
frame.Parent = screenGui

-- Adiciona um efeito de canto arredondado
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = frame

-- Cria o Label para exibir a posição
local positionLabel = Instance.new("TextLabel")
positionLabel.Size = UDim2.new(1, 0, 0, 50)
positionLabel.Position = UDim2.new(0, 0, 0, 25)
positionLabel.BackgroundTransparency = 1
positionLabel.Text = "Posição: Desativada"
positionLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
positionLabel.TextScaled = true
positionLabel.Font = Enum.Font.SourceSansBold
positionLabel.Parent = frame

-- Cria o Toggle (botão de ativar/desativar)
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 80, 0, 30)
toggleButton.Position = UDim2.new(0.5, -40, 0, 70)
toggleButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
toggleButton.Text = "Ativar"
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.TextScaled = true
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.Parent = frame

-- Adiciona um efeito de canto arredondado ao botão
local buttonCorner = Instance.new("UICorner")
buttonCorner.CornerRadius = UDim.new(0, 8)
buttonCorner.Parent = toggleButton

-- Variáveis de controle
local isShowingPosition = false
local updateConnection = nil

-- Função para atualizar a posição do jogador na UI
local function updatePlayerPosition()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local position = LocalPlayer.Character.HumanoidRootPart.Position
        positionLabel.Text = string.format("Posição: X = %.2f, Y = %.2f, Z = %.2f", position.X, position.Y, position.Z)
    else
        positionLabel.Text = "Posição: Personagem não encontrado!"
    end
end

-- Função para alternar a exibição da posição
local function togglePositionDisplay()
    isShowingPosition = not isShowingPosition
    if isShowingPosition then
        toggleButton.Text = "Desativar"
        toggleButton.BackgroundColor3 = Color3.fromRGB(255, 100, 100) -- Vermelho quando ativado
        -- Inicia a atualização da posição
        updateConnection = RunService.Heartbeat:Connect(function()
            updatePlayerPosition()
        end)
    else
        toggleButton.Text = "Ativar"
        toggleButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100) -- Cinza quando desativado
        -- Para a atualização e limpa o texto
        if updateConnection then
            updateConnection:Disconnect()
            updateConnection = nil
        end
        positionLabel.Text = "Posição: Desativada"
    end
end

-- Conecta o botão ao clique
toggleButton.MouseButton1Click:Connect(togglePositionDisplay)

-- Permite arrastar a UI
local dragging = false
local dragStart = nil
local startPos = nil

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
    end
end)

frame.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

frame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)
