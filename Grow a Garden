-- Grow a Garden

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")
local StarterGui = game:GetService("StarterGui")
local lp = Players.LocalPlayer

-- Fun√ß√£o que cria a tela de loading e retorna uma promise
local function createLoadingScreen()
    local promise = {}
    promise.completed = false
    promise.connection = nil
    
    -- Remove GUI antiga se existir
    pcall(function()
        if CoreGui:FindFirstChild("LoadingScreen") then
            CoreGui.LoadingScreen:Destroy()
        end
    end)

    -- Cria a UI de carregamento
    local gui = Instance.new("ScreenGui")
    gui.Name = "LoadingScreen"
    gui.IgnoreGuiInset = true
    gui.ResetOnSpawn = false
    gui.Parent = CoreGui
    pcall(function() syn.protect_gui(gui) end)

    local frame = Instance.new("Frame")
    frame.BackgroundColor3 = Color3.new(0, 0, 0)
    frame.BackgroundTransparency = 0.3
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.Parent = gui

    local image = Instance.new("ImageLabel")
    image.Size = UDim2.new(0, 300, 0, 300)
    image.Position = UDim2.new(0.5, -150, 0.35, -150)
    image.BackgroundTransparency = 1
    image.Image = "rbxassetid://75732220851513"
    image.Parent = frame

    local nameText = Instance.new("TextLabel")
    nameText.Size = UDim2.new(1, 0, 0, 40)
    nameText.Position = UDim2.new(0, 0, 0.65, 0)
    nameText.TextColor3 = Color3.fromRGB(255, 255, 255)
    nameText.TextStrokeTransparency = 0.3
    nameText.BackgroundTransparency = 1
    nameText.Font = Enum.Font.FredokaOne
    nameText.TextScaled = true
    nameText.Text = "Verificando usu√°rio: "..lp.Name.." (Conta: "..tostring(lp.AccountAge).." dias)"
    nameText.Parent = frame

    local barBG = Instance.new("Frame")
    barBG.Size = UDim2.new(0.6, 0, 0.03, 0)
    barBG.Position = UDim2.new(0.2, 0, 0.8, 0)
    barBG.BackgroundColor3 = Color3.new(1, 1, 1)
    barBG.BorderSizePixel = 0
    barBG.Parent = frame

    local bar = Instance.new("Frame")
    bar.Size = UDim2.new(0, 0, 1, 0)
    bar.BackgroundColor3 = Color3.new(0.7, 0.2, 0.6)
    bar.BorderSizePixel = 0
    bar.Parent = barBG

    -- Anima√ß√£o da barra de carregamento
    local tween = TweenService:Create(
        bar,
        TweenInfo.new(4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {Size = UDim2.new(1, 0, 1, 0)}
    )
    tween:Play()

    -- Fun√ß√£o para limpar a UI
    local function cleanup()
        if gui then
            gui:Destroy()
        end
        if promise.connection then
            promise.connection:Disconnect()
        end
    end

    -- Ap√≥s a barra carregar, faz o fade out e destr√≥i a UI
    promise.connection = tween.Completed:Connect(function()
        -- Fade out suave da UI
        TweenService:Create(frame, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
        TweenService:Create(barBG, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
        TweenService:Create(bar, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
        TweenService:Create(image, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {ImageTransparency = 1}):Play()
        TweenService:Create(nameText, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
        
        -- Aguarda o fade out terminar
        task.delay(1.2, function()
            -- Toca som de conclus√£o
            local sound = Instance.new("Sound")
            sound.SoundId = "rbxassetid://8486683243"
            sound.Volume = 0.5
            sound.PlayOnRemove = true
            sound.Parent = workspace
            sound:Destroy()
            
            -- Exibe a notifica√ß√£o de boas-vindas
            StarterGui:SetCore("SendNotification", {
                Title = "Coquette Hub, Grow a Garden",
                Text = "Bem-vindo √† Coquette Hub üíñ",
                Duration = 4
            })
            
            -- Marca como conclu√≠do e limpa
            promise.completed = true
            cleanup()
        end)
    end)
    
    return promise
end

-- Fun√ß√£o para esperar at√© que a promise seja resolvida
local function waitForPromise(promise)
    while not promise.completed do
        task.wait()
    end
end

-- Uso:
local loadingPromise = createLoadingScreen()

-- Aqui voc√™ coloca o c√≥digo que deve esperar at√© que o loading termine
waitForPromise(loadingPromise)

-- SEU C√ìDIGO ABAIXO AQUI
print("Loading completo! Agora executando o resto do script...")
-- ... resto do seu c√≥digo ...

-- Carregar OrionLib
local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))()

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer
local Humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
local UserInputService = game:GetService("UserInputService")

-- Valores padr√£o
local defaultWalkSpeed = 16
local defaultJumpPower = 50
local defaultGravity = 196.2

-- Janela principal
local Window = OrionLib:MakeWindow({
    Name = "Coquette Hub | Grow a Garden",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "CoquetteHubGrowGarden"
})

-- Fun√ß√£o para resetar valores
local function ResetAll()
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local hum = char:FindFirstChildOfClass("Humanoid")
    hum.WalkSpeed = defaultWalkSpeed
    hum.JumpPower = defaultJumpPower
    Workspace.Gravity = defaultGravity
    OrionLib:MakeNotification({
        Name = "Resetado!",
        Content = "Speed, Jump e Gravidade voltaram ao normal.",
        Image = "rbxassetid://7733960981",
        Time = 3
    })
end

-- =========================
-- Tab: Farm (Auto Farm)
-- =========================
local FarmTab = Window:MakeTab({
    Name = "Auto Farm",
    Icon = "rbxassetid://7734053495"
})

local autoFarm = false
local autoSell = false

FarmTab:AddToggle({
    Name = "Auto Coletar Frutas",
    Default = false,
    Callback = function(Value)
        autoFarm = Value
        if autoFarm then
            OrionLib:MakeNotification({Name="Auto Farm", Content="Auto Coletar Ativado!", Image="rbxassetid://7734053495", Time=2})
            spawn(function()
                while autoFarm do
                    for _, fruit in pairs(Workspace:GetDescendants()) do
                        if fruit:IsA("BasePart") and fruit.Name:lower():find("fruit") then
                            pcall(function()
                                firetouchinterest(LocalPlayer.Character.HumanoidRootPart, fruit, 0)
                                firetouchinterest(LocalPlayer.Character.HumanoidRootPart, fruit, 1)
                            end)
                        end
                    end
                    task.wait(0.2)
                end
            end)
        end
    end
})

FarmTab:AddToggle({
    Name = "Auto Vender Frutas",
    Default = false,
    Callback = function(Value)
        autoSell = Value
        if autoSell then
            OrionLib:MakeNotification({Name="Auto Sell", Content="Auto Vender Ativado!", Image="rbxassetid://7734053495", Time=2})
            spawn(function()
                while autoSell do
                    -- Tenta encontrar e tocar no vendedor (ajuste o nome se necess√°rio)
                    for _, sell in pairs(Workspace:GetDescendants()) do
                        if sell:IsA("BasePart") and (sell.Name:lower():find("sell") or sell.Name:lower():find("market")) then
                            pcall(function()
                                firetouchinterest(LocalPlayer.Character.HumanoidRootPart, sell, 0)
                                firetouchinterest(LocalPlayer.Character.HumanoidRootPart, sell, 1)
                            end)
                        end
                    end
                    task.wait(1)
                end
            end)
        end
    end
})

FarmTab:AddButton({
    Name = "Teleportar para o Mercado",
    Callback = function()
        -- Tenta encontrar o mercado/sell
        for _, sell in pairs(Workspace:GetDescendants()) do
            if sell:IsA("BasePart") and (sell.Name:lower():find("sell") or sell.Name:lower():find("market")) then
                LocalPlayer.Character:PivotTo(sell.CFrame + Vector3.new(0, 5, 0))
                OrionLib:MakeNotification({Name="Teleporte", Content="Teleportado para o Mercado!", Image="rbxassetid://7734053495", Time=2})
                return
            end
        end
        OrionLib:MakeNotification({Name="Teleporte", Content="Mercado n√£o encontrado!", Image="rbxassetid://7734053495", Time=2})
    end
})

-- =========================
-- Tab: Player (Speed, Jump, Gravidade)
-- =========================
local PlayerTab = Window:MakeTab({
    Name = "Player",
    Icon = "rbxassetid://7734053495"
})

PlayerTab:AddSlider({
    Name = "Speed",
    Min = 16,
    Max = 200,
    Default = defaultWalkSpeed,
    Increment = 1,
    ValueName = "Speed",
    Callback = function(Value)
        local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local hum = char:FindFirstChildOfClass("Humanoid")
        hum.WalkSpeed = Value
    end
})

PlayerTab:AddSlider({
    Name = "Jump Power",
    Min = 50,
    Max = 300,
    Default = defaultJumpPower,
    Increment = 1,
    ValueName = "Jump",
    Callback = function(Value)
        local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local hum = char:FindFirstChildOfClass("Humanoid")
        hum.JumpPower = Value
    end
})

PlayerTab:AddSlider({
    Name = "Gravidade",
    Min = 50,
    Max = 400,
    Default = defaultGravity,
    Increment = 1,
    ValueName = "Gravidade",
    Callback = function(Value)
        Workspace.Gravity = Value
    end
})

PlayerTab:AddButton({
    Name = "Resetar Speed/Jump/Gravidade",
    Callback = ResetAll
})

-- =========================
-- Tab: Fun√ß√µes Extras
-- =========================
local ExtraTab = Window:MakeTab({
    Name = "Extras",
    Icon = "rbxassetid://7734053495"
})

-- Infinite Jump
local infJump = false
ExtraTab:AddToggle({
    Name = "Infinite Jump",
    Default = false,
    Callback = function(Value)
        infJump = Value
        if infJump then
            OrionLib:MakeNotification({Name="Infinite Jump", Content="Ativado!", Image="rbxassetid://7734053495", Time=2})
        else
            OrionLib:MakeNotification({Name="Infinite Jump", Content="Desativado!", Image="rbxassetid://7734053495", Time=2})
        end
    end
})

UserInputService.JumpRequest:Connect(function()
    if infJump then
        local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local hum = char:FindFirstChildOfClass("Humanoid")
        if hum then
            hum:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)

-- Fun√ß√£o extra: Teleportar para o topo do mapa
ExtraTab:AddButton({
    Name = "Teleportar para o Topo",
    Callback = function()
        local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local hrp = char:FindFirstChild("HumanoidRootPart")
        if hrp then
            hrp.CFrame = hrp.CFrame + Vector3.new(0, 200, 0)
            OrionLib:MakeNotification({Name="Topo!", Content="Teleportado para o topo!", Image="rbxassetid://7734053495", Time=2})
        end
    end
})

-- Fun√ß√£o extra: Anti-AFK
ExtraTab:AddToggle({
    Name = "Anti-AFK",
    Default = true,
    Callback = function(Value)
        if Value then
            OrionLib:MakeNotification({Name="Anti-AFK", Content="Ativado!", Image="rbxassetid://7734053495", Time=2})
            if getconnections then
                for _,v in pairs(getconnections(LocalPlayer.Idled)) do
                    v:Disable()
                end
            end
        else
            OrionLib:MakeNotification({Name="Anti-AFK", Content="Desativado!", Image="rbxassetid://7734053495", Time=2})
        end
    end
})

OrionLib:Init()
